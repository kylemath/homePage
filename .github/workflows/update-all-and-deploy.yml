name: Update All Content and Deploy

on:
  schedule:
    - cron: '0 1 * * *'  # Run daily at 1 AM (projects)
    - cron: '0 2 * * 0'  # Run weekly on Sunday at 2 AM (publications)
  workflow_dispatch:  # Allow manual trigger
    inputs:
      update_projects:
        description: 'Update projects list'
        required: false
        default: true
        type: boolean
      update_publications:
        description: 'Update publications list'
        required: false
        default: true
        type: boolean
      update_contributor_projects:
        description: 'Update contributor projects list'
        required: false
        default: true
        type: boolean
  push:
    branches: [ main ]  # Also run on pushes to main

jobs:
  update-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install basic dependencies
          pip install -r requirements.txt
          # Install publications dependencies
          pip install requests beautifulsoup4 lxml
          # Try to install scholarly, but don't fail if it doesn't work
          pip install scholarly || echo "scholarly installation failed, using basic scraping"
          
      - name: Update projects list
        if: |
          (github.event_name == 'schedule' && github.event.schedule == '0 1 * * *') ||
          github.event_name == 'push' ||
          (github.event_name == 'workflow_dispatch' && github.event.inputs.update_projects == 'true')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Updating projects list..."
          python update_projects.py
        
      - name: Update contributor projects list
        if: |
          (github.event_name == 'schedule' && github.event.schedule == '0 1 * * *') ||
          github.event_name == 'push' ||
          (github.event_name == 'workflow_dispatch' && github.event.inputs.update_contributor_projects == 'true')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Updating contributor projects list..."
          python update_contributor_projects.py
        
      - name: Update publications list
        if: |
          (github.event_name == 'schedule' && github.event.schedule == '0 2 * * 0') ||
          github.event_name == 'push' ||
          (github.event_name == 'workflow_dispatch' && github.event.inputs.update_publications == 'true')
        run: |
          echo "Updating publications list..."
          # Try scholarly version first, fall back to basic if it fails
          if python update_publications_scholarly.py; then
            echo "Publications updated using scholarly library"
          else
            echo "Scholarly version failed, trying basic version"
            python update_publications.py
          fi
        
      - name: Check for changes
        id: verify-changed-files
        run: |
          if git diff --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Changes detected:"
            git diff --name-only
          fi
          
      - name: Commit changes
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add index.html
          
          # Create a more descriptive commit message
          PROJECTS_UPDATED=""
          PUBLICATIONS_UPDATED=""
          CONTRIBUTOR_PROJECTS_UPDATED=""
          
          if git diff --cached --name-only | grep -q "index.html"; then
            if [ "${{ github.event_name }}" = "schedule" ] && [ "${{ github.event.schedule }}" = "0 1 * * *" ]; then
              PROJECTS_UPDATED="projects"
              CONTRIBUTOR_PROJECTS_UPDATED="contributor-projects"
            elif [ "${{ github.event_name }}" = "schedule" ] && [ "${{ github.event.schedule }}" = "0 2 * * 0" ]; then
              PUBLICATIONS_UPDATED="publications"
            else
              PROJECTS_UPDATED="projects"
              CONTRIBUTOR_PROJECTS_UPDATED="contributor-projects"
              PUBLICATIONS_UPDATED="publications"
            fi
          fi
          
          # Build commit message based on what was updated
          UPDATES=()
          [ -n "$PROJECTS_UPDATED" ] && UPDATES+=("projects")
          [ -n "$CONTRIBUTOR_PROJECTS_UPDATED" ] && UPDATES+=("contributor projects")
          [ -n "$PUBLICATIONS_UPDATED" ] && UPDATES+=("publications")
          
          if [ ${#UPDATES[@]} -gt 1 ]; then
            COMMIT_MSG="Update $(IFS=', '; echo "${UPDATES[*]%,*}") and ${UPDATES[-1]} lists [skip ci]"
          elif [ ${#UPDATES[@]} -eq 1 ]; then
            COMMIT_MSG="Update ${UPDATES[0]} list [skip ci]"
          else
            COMMIT_MSG="Update homepage content [skip ci]"
          fi
          
          git commit -m "$COMMIT_MSG"
          
      - name: Push changes
        if: steps.verify-changed-files.outputs.changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Deploy to GitHub Pages
        if: steps.verify-changed-files.outputs.changed == 'true' || github.event_name == 'push'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
          cname: kylemathewson.com 